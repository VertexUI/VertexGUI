//

//

import Foundation
import GfxMath

// TODO: might implement a rawMouseEvent or systemMouseEvent and a UIMouseEvent (with more properties added for proper use in ui, generated by UIRoot from RawMouseEvent)
public protocol GUIMouseEvent {
    //var position: DPoint2 { get set }
    var globalPosition: DPoint2 { get set }
}

public struct GUIMouseButtonUpEvent: GUIMouseEvent {
    public var button: MouseButton
    public var position: DPoint2
    public var globalPosition: DPoint2

    public init(button: MouseButton, position: DPoint2, globalPosition: DPoint2) {
        self.button = button
        self.position = position
        self.globalPosition = globalPosition
    }
}

public struct GUIMouseButtonDownEvent: GUIMouseEvent {
    public var button: MouseButton
    public var position: DPoint2
    public var globalPosition: DPoint2

    public init(button: MouseButton, position: DPoint2, globalPosition: DPoint2) {
        self.button = button
        self.position = position
        self.globalPosition = globalPosition
    }
}

// TODO: maybe MouseButtonClick is not the right name, MouseClick might be better
public struct GUIMouseButtonClickEvent: GUIMouseEvent {
    public var button: MouseButton
    public var position: DPoint2
    public var globalPosition: DPoint2

    public init(button: MouseButton, position: DPoint2, globalPosition: DPoint2) {
        self.button = button
        self.position = position
        self.globalPosition = globalPosition
    }
}

public struct GUIMouseWheelEvent: GUIMouseEvent {
    public var scrollAmount: DVec2
    public var position: DPoint2
    public var globalPosition: DPoint2

    public init(scrollAmount: DVec2, position: DPoint2, globalPosition: DPoint2) {
        self.scrollAmount = scrollAmount
        self.position = position
        self.globalPosition = globalPosition
    }
}

public struct GUIMouseMoveEvent: GUIMouseEvent {
    public var position: DPoint2
    public var globalPosition: DPoint2
    public var previousPosition: DPoint2
    public var previousGlobalPosition: DPoint2
    public var move: DVec2 {
        get {
            DVec2(position.x - previousPosition.x, position.y - previousPosition.y)
        }
    }

    public init(position: DPoint2, globalPosition: DPoint2, previousPosition: DPoint2, previousGlobalPosition: DPoint2) {
        self.position = position
        self.globalPosition = globalPosition
        self.previousPosition = previousPosition
        self.previousGlobalPosition = previousGlobalPosition
    }
}

// TODO: can mouseenter have a previousposition?
public struct GUIMouseEnterEvent: GUIMouseEvent {
    public var position: DPoint2
    public var globalPosition: DPoint2

    public init(position: DPoint2, globalPosition: DPoint2) {
        self.position = position
        self.globalPosition = globalPosition
    }
}

// TODO: can mouse leave have a position?
public struct GUIMouseLeaveEvent: GUIMouseEvent {
    public var position: DPoint2
    public var globalPosition: DPoint2

    public init(position: DPoint2, globalPosition: DPoint2) {
        self.position = position 
        self.globalPosition = globalPosition 
    }
}